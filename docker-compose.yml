version: "3.7"
services:

  api:
    build: 
      context: .
      dockerfile: ./API/docker/node/Dockerfile
    volumes:
      - type: bind
        source: ./API
        target: /usr/app/API
      - type: volume
        source: apiNodeModules
        target: /usr/app/API/node_modules
    ports:
      - "127.0.0.1:3001:3000"
    depends_on:
      - pgdb
    environment:
      - DATABASE_URL=postgres://jeff:password@pgdb:5432/postgres
    restart: on-failure
    container_name: irondb_web
    command: ["./docker/wait-for-it.sh", "pgdb:5432", "--timeout=90", "--", "node_modules/.bin/nodemon", "./bin/www"]

  pgdb:
    build: './API/docker/postgres'
    container_name: postgres
    restart: always
    # image: postgres:11.0-alpine
    volumes:
      - ./API/model/db-init:/docker-entrypoint-initdb.d/
      - ./API/pg-data:/var/lib/postgresql/data:z
    environment:
      - POSTGRES_USER=jeff
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    ports:
      - "127.0.0.1:5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready  -d postgres -U jeff"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  client:
    build: ./client
    ports:
      - "127.0.0.1:8001:8000"
    depends_on:
      - api
    volumes:
      - type: bind
        source: ./client
        target: /usr/app/client
      - type: volume
        source: clientNodeModules
        target: /usr/app/client/node_modules
  
volumes:
  clientNodeModules:
  apiNodeModules:
